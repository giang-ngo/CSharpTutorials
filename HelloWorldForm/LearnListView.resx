<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>